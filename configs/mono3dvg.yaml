random_seed: 444

dataset:
  type: &dataset_type 'KITTIRefer'
  root_dir: '/data/zhanyang/data/KITTIRefer'
  train_split: 'train'
  val_split: 'val'
  test_split: 'test'
  batch_size: 1
  use_3d_center: True
  bbox2d_type: 'anno'  # 'proj' or 'anno'
  meanshape: False     # use predefined anchor or not
  clip_2d: False

  aug_pd: True
  aug_crop: True

  random_flip: 0.5
  random_crop: 0.5
  scale: 0.05
  shift: 0.05


model_name: 'mono3dvg'

model:
  num_classes: 9
  return_intermediate_dec: True
  device: 'cuda'

  # Backbone
  backbone: 'resnet50'
  train_backbone: True
  num_feature_levels: 4
  dilation: False
  position_embedding: 'sine'  # 'sine' or 'learned'
  masks: False

  # Depth predictor
  mode: LID
  num_depth_bins: 80
  depth_min: 1e-3
  depth_max: 60.0

  # Transformer
  with_box_refine: True
  two_stage: False
  init_box: False
  enc_layers: 3
  dec_layers: 1
  hidden_dim: 256
  dim_feedforward: 256
  dropout: 0.1
  nheads: 8
#  num_queries: 110
  num_queries: 1
  enc_n_points: 4
  dec_n_points: 4
  freeze_text_encoder: True

  # Loss
  aux_loss: False

  # Loss coefficients
  cls_loss_coef: 2
  focal_alpha: 0.25

  bbox_loss_coef: 5
  giou_loss_coef: 2
  3dcenter_loss_coef: 10
  dim_loss_coef: 1
  angle_loss_coef: 1
  depth_loss_coef: 1
  depth_map_loss_coef: 1

  # Matcher
  set_cost_class: 2
  set_cost_bbox: 5
  set_cost_giou: 2
  set_cost_3dcenter: 10


optimizer:
  type: 'adamw'
  lr: 0.0001
  weight_decay: 0.0001


lr_scheduler:
  type: 'step'  # 'step' or 'cos'
  warmup: True  # 5 epoches, cosine warmup, init_lir=0.00001 in default
  decay_rate: 0.1
  decay_list: [40]


trainer:
  max_epoch: 60
  gpu_ids: '3'
  detr_model: 'checkpoint_best_20.61AP.pth'
  save_frequency: 1  # checkpoint save interval (in epoch)
#  resume_model: True
#  pretrain_model: 'checkpoint_latest.pth'
#  save_path: './runs_lr0001/'
#  save_path: './runs_lr0002/'
#  save_path: './runs_lr0002_depthtext/'
#  save_path: './runs_lr0001_onequery/'
#  save_path: './runs_lr0001_adapter/'
#  save_path: './runs_lr0001_adapter2/'
#  save_path: './runs_lr0001_adapt_textquery/'
#  save_path: './runs_lr0001_adapt_onequery/'
#  save_path: './runs_lr0001_adapt_noresidual/'
#  save_path: './runs_lr0001_adapt_twovisencod/'
#  save_path: './runs_lr0001_adapt_noresidualDTV/'
#  save_path: './runs_lr0001_adapt_depthencode2num/'
#  save_path: './runs_lr0001_adapt_noresidualDVT/'
#  save_path: './runs_lr0001_adapt_DTV2decoder/'
#  save_path: './runs_lr0001_adapt_DTV1decoder/'
#  save_path: './runs_lr0001_onlydecoder'
#  save_path: './runs_lr0001_DTV1decoder'
#  save_path: './runs_lr0001_DTV3decoder'
#  save_path: './runs_lr0001_TDV1decoder'
#  save_path: './runs_lr0001_TDV3decoder'
#  save_path: './runs_lr0001_DVT1decoder'
#  save_path: './runs_lr0001_DVT1decodfulladd'
#  save_path: './runs_lr0001_DTV2decoder'
#  save_path: './runs_lr0001_our'
#  save_path: './runs_lr0001_our2'
#  save_path: './runs_lr0001_DTVvisencodnotext'
#  save_path: './runs_lr0001_DTVnodepthadapter'
#  save_path: './runs_lr0001_DTVnoadapter'
#  save_path: './runs_lr0001_DTV2visencode'
#  save_path: './runs_lr0001_DTV4visencode'
#  save_path: './runs_lr0001_resetour'
#  save_path: './runs_lr0001_rour1decode'
#  save_path: './runs_lr0001_rour1deweightencode'
#  save_path: './runs_lr0001_rour1defreezeencode'
#  save_path: './runs_lr0001_rDTV1noweight'
  save_path: './runs_lr0001_rour1decodeDTV'
#  save_path: './runs_lr0001_rDTV3decoder'
#  save_path: './runs_lr0001_rournoadapter'
#  save_path: './runs_lr0001_rDTV3decoder2'
#  save_path: './runs_lr0001_ronlydecoder'
#  save_path: './runs_lr0001_rDTV2decoder'
#  save_path: './runs_lr0001_rour1decodeDTV150'
#  save_path: './runs_lr0001_rour1decodeDTV2depth'
#  save_path: './runs_lr0001_without_depth'

tester:
  type: *dataset_type
  checkpoint: 195  # the start ckpt epoch for 'all'
  threshold: 0.0  # confidence filter
  topk: 1
  pretrain_model: 'checkpoint_best.pth'
#  pretrain_model: 'checkpoint_latest.pth'
#  pretrain_model: 'checkpoint_loss_min.pth'
